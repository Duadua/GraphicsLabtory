//--------------------------------------------------------------------
// Declaration: Copyright (c), by i_dovelemon, 2016. All right reserved.
// Author: i_dovelemon[1322600812@qq.com]
// Date: 2016 / 06 / 29
// Brief: Gauss blur horizontal pass shader
//--------------------------------------------------------------------
#version 330

in vec2 vs_texcoord;
out vec3 color;

uniform sampler2D glb_LogLumTex;
uniform float glb_BloomTexWidth;

const float kGaussNum[10] = {
0.3325988325916909,
0.29351746424483355,
0.20173145719908508,
0.10797911335286782,
0.04501241776837279,
0.014613403548726683,
0.0036948504639480314,
0.0007275599897517733,
0.00011157507882714101,
1.3325761896576223e-05
};

void main() {
    color = texture2D(glb_LogLumTex, vs_texcoord).xyz * kGaussNum[0];
    float step = 1.0 / glb_BloomTexWidth;

    for (int i = 1; i < 10; i++) {
        if (vs_texcoord.x - i * step >= 0.0) {
            color += texture2D(glb_LogLumTex, vec2(vs_texcoord.x - i * step, vs_texcoord.y)).xyz * kGaussNum[i];
        }

        if (vs_texcoord.x + i * step <= 1.0) {
            color += texture2D(glb_LogLumTex, vec2(vs_texcoord.x + i * step, vs_texcoord.y)).xyz * kGaussNum[i];
        }
    }
}